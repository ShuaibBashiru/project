YUI.add("flickr-explore-getContext-fetcher",function(e,o){"use strict";e.namespace("ListFetchers")["flickr-explore-getContext"]={run:function(t,r){var s=this;return e.Promise.all([r.callAPI("flickr.explore.getContext",this._processParams(t),!0),r.getModelRegistry("explore-models"),r.getModelRegistry("photo-models"),r.getModelRegistry("person-models"),r.getModelRegistry("photo-engagement-models"),r.getModelRegistry("photo-stats-models")]).then(function(e){return s._processResponse(e,t)},function(e){throw 1===e.code&&"Photo not in explore"===e.message&&(e.notInContext=!0),e}).then(null,e.FetcherErrorLogger(o))},_processParams:function(o){return{photo_id:o.photoId,extras:e.APIHelper.request.getRebootPhotoExtras(),num_prev:o.numPrev,num_next:o.numNext}},_processResponse:function(o,t){var r,s,n,p,l,i,a=o[0],h=o[1],d=o[2],g=o[3],u=o[4],m=o[5],x=[],c=[],y=d.proxy(t.photoId),M=[];return r=a.nextphotos,s=a.prevphotos,c=e.APIHelper.response.parsePhotos({photos:r.photo,personModelRegistry:g,photoModelRegistry:d,photoEngagementModelRegistry:u,photoStatsModelRegistry:m}),x=e.APIHelper.response.parsePhotos({photos:s.photo,personModelRegistry:g,photoModelRegistry:d,photoEngagementModelRegistry:u,photoStatsModelRegistry:m}),i=h.getValue(t.id,"photoContextList"),p=!!i.hasMinBoundary&&i.hasMinBoundary(),l=!!i.hasMaxBoundary&&i.hasMaxBoundary(),n=i.getList(),M=e.APIHelper.response.addOrReplaceListByContext({model:y,next:c,prev:x.reverse(),current:n,hasMin:p,hasMax:l,numNext:t.numNext,numPrev:t.numPrev}),h.setValue(t.id,"photoContextList",M),{next:c,previous:x.reverse()}}}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["explore-models","photo-models","photo-engagement-models","photo-stats-models"]});YUI.add("explore-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,langBundles:this.details.langBundles,remote:{read:function(t){return e.ListFetchers["flickr-interestingness-getList"].run(t,this.appContext)}},attributes:{photos:{isCollection:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-interestingness-getList"]}},totalItems:{defaultValue:0,setter:function(t){return(t=e.AttributeHelpers.coerceInteger(t))<0&&(t=0),t}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-explore-getContext"],listItemIdField:"photoId"}},displayType:{readOnly:!0,defaultValue:"explore"},url:{readOnly:!0,defaultFn:function(e){return"/explore/"+e.replace(/-/g,"/")}},urlSuffix:{readOnly:!0,defaultFn:function(e){return"explore-"+e}},title:{readOnly:!0,defaultFn:function(e){return this.intlMessage({intlName:"models.EXPLORE_TITLE",id:e})}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-interestingness-getList-fetcher","flickr-explore-getContext-fetcher"],langBundles:["models"]});YUI.add("flickr-interestingness-getList-fetcher",function(e,t){var o=100;e.namespace("ListFetchers")["flickr-interestingness-getList"]={run:function(o,r){var s,p=this,a=this._processParams(o,r);return s=[r.callAPI("flickr.interestingness.getList",a),r.getModelRegistry("explore-models"),r.getModelRegistry("photo-lite-models")],e.Promise.all(s).then(function(e){return p._processResponse(e,o)},e.FetcherErrorLogger(t))},_processParams:function(t,r){var s;return s={extras:e.APIHelper.request.getRebootPhotoLiteExtras(),per_page:t.perPage||o,page:t.page||"1",date:t.id},e.merge(s,t.apiParams||{})},_processResponse:function(t,o){var r,s=t[0],p=t[1],a=t[2],i={id:o.id},n=[];if(!o.id)throw new ReferenceError("No `id` provided by request.");if(!s.photos||!s.photos.photo)throw new Error("No `photos.photo` property returned by API.");return n=s.photos.photo.map(function(t){return r=e.APIHelper.response.parsePhotoLite(t),a.addOrUpdate(r)}),i.photos={perPage:s.photos.perpage,page:s.photos.page||1,pageContent:n,totalItems:s.photos.total,totalPages:s.photos.pages},i.totalItems=s.photos.total,p.addOrUpdate(i),i.photos.pageContent}}},"@VERSION@",{requires:["api-helper","flickr-promise"],optional:["explore-models","photo-lite-models"]});YUI.add("explore-route",function(t,e){function o(t){o.superclass.constructor.call(this,t)}t.Routes[this.name]=o,t.extend(o,t.FlickrRoute,{langBundles:this.details.langBundles,run:function(e){var o,r,a,i={},n=(e.query||{}).layout||"justified",s=(e.params||{}).photo_id,l=this;return r=e.params.year?[e.params.year.toString(),e.params.month.toString(),e.params.day.toString()]:[(o=t.moment.utc().subtract({days:1,hours:4})).format("YYYY"),o.format("MM"),o.format("DD")],i.id=r.join("-"),i.apiParams={date:i.id},a={perPage:50,withPhotoId:s},this.appContext.getModel("explore-models",i,a).then(function(e){return t.Promise.resolve({view:"explore-page-view",params:{exploreId:e.id,photoListLayoutStyle:n,withPhotoId:s},title:l.intlMessage({intlName:"common.EXPLORE"}),layout:"scrolling"})},function(o){return l.displayRouteErrors(e,new t.RouteError(404,l.intlMessage({intlName:"common.404_EXPLORE_NONEXISTENT"})))})}}),t.mix(o.prototype,t.Localizable)},"@VERSION@",{requires:["flickr-route","flickr-promise","explore-models","moment"],langBundles:["common"]});